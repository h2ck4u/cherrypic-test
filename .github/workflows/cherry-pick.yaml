name: Safe Auto Cherry-Pick

on:
  pull_request:
    types:
      - closed

jobs:
  cherry-pick:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest

    permissions:
      contents: write
      pull-requests: write

    steps:
      - name: Checkout the repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Detect cherry-pick label
        id: detect
        run: |
          label=$(echo '${{ toJson(github.event.pull_request.labels) }}' | jq -r '.[] | select(.name | startswith("cherry-pick-")) | .name' || true)
          echo "LABEL=$label" >> $GITHUB_ENV

      - name: Exit if no cherry-pick label
        if: env.LABEL == ''
        run: echo "No cherry-pick label found. Skipping..."

      - name: Prepare cherry-pick branch
        if: env.LABEL != ''
        run: |
          TARGET_BRANCH=$(echo "$LABEL" | sed 's/^cherry-pick-//')
          ORIGINAL_BRANCH="${{ github.event.pull_request.head.ref }}"
          CHERRYPICK_BRANCH="${ORIGINAL_BRANCH}-cherrypick"

          git fetch origin $TARGET_BRANCH
          git checkout -b $CHERRYPICK_BRANCH origin/$TARGET_BRANCH

          echo "TARGET_BRANCH=$TARGET_BRANCH" >> $GITHUB_ENV
          echo "CHERRYPICK_BRANCH=$CHERRYPICK_BRANCH" >> $GITHUB_ENV

      - name: Cherry-pick all commits from PR
        if: env.LABEL != ''
        run: |
          COMMITS=$(gh pr view ${{ github.event.pull_request.number }} --json commits -q '.commits[].oid')
          for COMMIT in $COMMITS; do
            git cherry-pick -x $COMMIT || { echo "Cherry-pick failed"; exit 1; }
          done
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Push and create PR
        if: env.LABEL != ''
        run: |
          git push origin $CHERRYPICK_BRANCH

          gh pr create \
            --title "Cherry-pick #${{ github.event.pull_request.number }} to $TARGET_BRANCH" \
            --body "자동 cherry-pick된 PR입니다. 원본: #${{ github.event.pull_request.number }}" \
            --base "$TARGET_BRANCH" \
            --head "$CHERRYPICK_BRANCH"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

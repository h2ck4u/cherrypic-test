name: Auto Cherry-Pick

on:
  pull_request:
    types: [closed]

jobs:
  cherry-pick:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Required to get full history

      - name: Set up Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Extract info
        id: extract
        run: |
          echo "pr_number=${{ github.event.pull_request.number }}" >> $GITHUB_OUTPUT
          echo "pr_title=$(jq -r '.pull_request.title' < "$GITHUB_EVENT_PATH")" >> $GITHUB_OUTPUT
          echo "pr_head_branch=${{ github.event.pull_request.head.ref }}" >> $GITHUB_OUTPUT

          # Find target branch from label
          target_label=$(jq -r '.pull_request.labels[]?.name' < "$GITHUB_EVENT_PATH" | grep '^cherrypick-' || true)
          if [[ -z "$target_label" ]]; then
            echo "No cherrypick-* label found. Exiting."
            exit 0
          fi
          target_branch=${target_label#cherrypick-}
          echo "target_branch=$target_branch" >> $GITHUB_OUTPUT

      - name: Get merge commit SHA
        id: merge_commit
        run: |
          sha=$(git log -1 --pretty=format:"%H" -m)
          echo "merge_commit=$sha" >> $GITHUB_OUTPUT

      - name: Create cherry-pick branch
        run: |
          git fetch origin ${{ steps.extract.outputs.target_branch }}
          git checkout -b ${{ steps.extract.outputs.pr_head_branch }}-cherry-pick origin/${{ steps.extract.outputs.target_branch }}

      - name: Cherry-pick commit
        id: cherrypick
        run: |
          if git cherry-pick -m 1 ${{ steps.merge_commit.outputs.merge_commit }}; then
            echo "conflict=false" >> $GITHUB_OUTPUT
          else
            echo "conflict=true" >> $GITHUB_OUTPUT
            git status
            git add .
            git commit -m "Cherry-pick with conflict markers: manual resolution needed"
          fi

      - name: Push cherry-pick branch
        run: |
          git push origin HEAD

      - name: Create pull request with GH CLI
        run: |
          gh pr create \
            --title "Cherry-pick: ${{ steps.extract.outputs.pr_title }}" \
            --body "This PR is a cherry-pick of #${{ steps.extract.outputs.pr_number }} into \`${{ steps.extract.outputs.target_branch }}`.
            ${{ steps.cherrypick.outputs.conflict == 'true' && '⚠️ Conflicts were found and must be resolved manually.' || '' }}" \
            --base ${{ steps.extract.outputs.target_branch }} \
            --head ${{ steps.extract.outputs.pr_head_branch }}-cherry-pick
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Comment if conflict
        if: steps.cherrypick.outputs.conflict == 'true'
        uses: peter-evans/create-or-update-comment@v4
        with:
          issue-number: ${{ steps.pr.outputs.pull-request-number }}
          body: |
            ⚠️ Cherry-pick from #${{ steps.extract.outputs.pr_number }} to `${{ steps.extract.outputs.target_branch }}` had **conflicts**.

            Please resolve them manually in PR #${{ steps.pr.outputs.pull-request-number }}.

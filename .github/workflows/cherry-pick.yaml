name: Auto Cherry Pick

on:
  pull_request:
    types: [closed]

jobs:
  cherry-pick:
    if: github.event.pull_request.merged == true &&
      contains(github.event.pull_request.labels.*.name, 'cherry-pick-')
    runs-on: ubuntu-latest

    permissions:
      contents: write
      pull-requests: write

    steps:
      - name: Extract PR metadata
        id: extract
        run: |
          echo "PR_NUMBER=${{ github.event.pull_request.number }}" >> $GITHUB_OUTPUT
          echo "PR_TITLE=${{ github.event.pull_request.title }}" >> $GITHUB_OUTPUT
          echo "PR_BRANCH=${{ github.event.pull_request.head.ref }}" >> $GITHUB_OUTPUT

          # Extract cherry-pick target from label
          for label in "${{ toJson(github.event.pull_request.labels) }}" ; do
            if [[ $label =~ cherry-pick-([a-zA-Z0-9/_-]+) ]]; then
              echo "TARGET_BRANCH=${BASH_REMATCH[1]}" >> $GITHUB_OUTPUT
              break
            fi
          done

      - name: Checkout target branch
        uses: actions/checkout@v4
        with:
          ref: ${{ steps.extract.outputs.TARGET_BRANCH }}
          fetch-depth: 0

      - name: Configure Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Create cherry-pick branch
        run: |
          BRANCH_NAME="${{ steps.extract.outputs.PR_BRANCH }}-cherrypick"
          git checkout -b "$BRANCH_NAME"

      - name: Fetch original PR commits
        run: |
          git fetch origin pull/${{ steps.extract.outputs.PR_NUMBER }}/head:original-pr
          COMMITS=$(git log --pretty=format:"%H" origin/${{ steps.extract.outputs.PR_BRANCH }} | tac)
          echo "$COMMITS" > commits.txt

      - name: Cherry-pick commits (skip merge commits)
        run: |
          set -eo pipefail
          while read sha; do
            if [ "$(git cat-file -t $sha)" = "commit" ] && [ "$(git show -s --pretty=%P $sha | wc -w)" -lt 2 ]; then
              git cherry-pick $sha || git cherry-pick --abort
            fi
          done < commits.txt

      - name: Push cherry-pick branch
        run: |
          BRANCH_NAME="${{ steps.extract.outputs.PR_BRANCH }}-cherrypick"
          git push origin "$BRANCH_NAME"

      - name: Create PR
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh pr create \
            --title "${{ steps.extract.outputs.PR_TITLE }}" \
            --head "${{ steps.extract.outputs.PR_BRANCH }}-cherrypick" \
            --base "${{ steps.extract.outputs.TARGET_BRANCH }}" \
            --body "🔁 Cherry-pick of #${{ steps.extract.outputs.PR_NUMBER }} to `${{ steps.extract.outputs.TARGET_BRANCH }}`"
